#!/usr/bin/env bash

# set up bash to handle errors more aggressively - a "strict mode" of sorts
set -e # give an error if any command finishes with a non-zero exit code
set -u # give an error if we reference unset variables
set -o pipefail # for a pipeline, if any of the commands fail with a non-zero exit code, fail the entire pipeline with that exit code

source ~/SCRIPTS_CONFIG.sh

# additional config options
INCREMENTAL_BACKUPS_PER_FULL_BACKUP=9 # 1 full backup for every 9 incremental backups
BACKUP_LOG_FILE="/home/$USER/.duplicity_backup_log"

DESTINATION="s3+http://$DUPLICITY_BACKUP_AWS_S3_BUCKET/$DUPLICITY_BACKUP_AWS_S3_BUCKET_PREFIX"

# check if we need to perform a full backup again (we do a full backup every 10 backups)
if [ ! -f "$BACKUP_LOG_FILE" ]; then
    echo "# GENERATED BY run-duplicity-backup" > "$BACKUP_LOG_FILE"
fi
LAST_FULL_BACKUP_INDEX=$(awk "/full backup/ { ln = FNR } END { print ln }" "$BACKUP_LOG_FILE")
if [ "$LAST_FULL_BACKUP_INDEX" == "" ]; then # no known backups yet, just ensure 
    LAST_FULL_BACKUP_INDEX=-10
fi
CURRENT_INDEX=$(cat "$BACKUP_LOG_FILE" | wc -l)
if [ $((1 + CURRENT_INDEX - LAST_FULL_BACKUP_INDEX)) -ge $INCREMENTAL_BACKUPS_PER_FULL_BACKUP ]; then
    BACKUP_MODE=full
else
    BACKUP_MODE=incremental
fi

# export credentials in environment variables for Duplicity to use
export AWS_ACCESS_KEY_ID="$DUPLICITY_BACKUP_AWS_ACCESS_KEY" # AWS key ID (for an IAM user)
export AWS_SECRET_ACCESS_KEY="$DUPLICITY_BACKUP_AWS_ACCESS_KEY_SECRET" # AWS secret key (for an IAM user)
export PASSPHRASE="$DUPLICITY_BACKUP_PASSPHRASE" # local passphrase to encrypt with

# keep only the last 3 full backups (and their associated incremental backups)
duplicity remove-all-but-n-full 3 "$DESTINATION"

# perform backup
duplicity $BACKUP_MODE --verbosity=info --s3-use-new-style --s3-unencrypted-connection --s3-use-multiprocessing "$DUPLICITY_BACKUP_FOLDER" "$DESTINATION"

# record successful backup
if [ $BACKUP_MODE == "full" ]; then
    echo "full backup at $(date)" >> "$BACKUP_LOG_FILE"
else
    echo "incremental backup at $(date)" >> "$BACKUP_LOG_FILE"
fi

echo "BACKUP COMPLETE - RUN run-duplicity-verify TO VERIFY THIS BACKUP"