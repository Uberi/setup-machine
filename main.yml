# TODO: disable any other autostart services that shouldn't autostart
# TODO: get freecad and freecad-doc and mypaint and yarn and nvm
# TODO: enable ufw with blocking all ports that aren't strictly necessary
# TODO; set up firejail for common apps
- name: setup local development environment
  remote_user: root
  hosts: all
  vars:
    - tmp_working_dir: "{{ ansible_env.HOME }}/tmp-machine-setup"
  tasks:
  - name: create temporary working directory
    file: path={{ tmp_working_dir }} state=directory

  - name: uninstall broken applications
    apt:
      state: absent
      name:
      - totem # video player, crashes a lot on certain videos, especially those generated by Apple devices, use VLC instead
      - eog   # image viewer, crashes a lot and doesn't handle large images very well, use Shotwell instead

  - name: install common applications
    apt:
      name:
      - audacity                      # simple audio editor
      - bleachbit                     # computer cleaner
      - blender                       # 3D content creation suite
      - blueman                       # powerful Bluetooth device manager
      - calibre                       # ebook editor, viewer, converter, manager
      - chromium-browser              # web browser
      - copyq                         # powerful clipboard manager utility
      - create-resources              # additional resources for GIMP/Blender/Inkscape
      - darktable                     # processor for RAW images
      - dconf-editor                  # settings editor
      - easytag                       # audio file tag editor
      - filezilla                     # file transfer client
      - firefox                       # web browser
      #- freecad                       # 3D CAD software
      #- freecad-doc                   # 3D CAD software documentation
      - fritzing                      # simple circuit designer
      - fritzing-parts                # parts configuration for simple circuit designer
      - geary                         # email client
      - gimp                          # image editor
      - gimp-help-en                  # image editor documentation
      - git                           # version control system
      - gnome-tweak-tool              # additional settings for GNOME
      - gparted                       # partition editor
      - inkscape                      # vector graphics editor
      - kdenlive                      # video editor
      - kicad                         # electronics CAD software
      - kicad-doc-en                  # electronics CAD software documentation
      - krita                         # painting/visual art software
      - libreoffice                   # office suite
      - meshlab                       # triangular mesh editor and toolkit
      #- mypaint                       # simple painting/visual art software
      - pavucontrol                   # Pulseaudio application-level volume control
      - pdfshuffler                   # PDF page-level manipulation software
      - sonic-visualiser              # audio analysis software
      - qalculate                     # powerful calculator utility
      - simplescreenrecorder          # screen recorder
      - texstudio                     # TeX editor
      - texlive-science               # TeX extras for science and math
      - texlive-science-doc           # documentation for TeX extras for science and math
      - texlive-latex-extra           # TeX additional packages
      - texlive-latex-extra-doc       # documentation for TeX additional packages
      - vim-gtk3                      # text editor
      - virtualbox                    # virtual machine manager
      - vlc                           # media player
      - w3m                           # text-based web browser
      - wireshark                     # network traffic analyser
      - xournal                       # document editor/PDF annotator
      - zeal                          # offline documentation viewer
    become: yes

  - name: install common command line apps and developer tools
    apt:
      name:
      - colordiff         # diff with colors
      - pandoc            # universal document converter
      - tree              # sort of like a recursive `ls`
      - htop              # resource monitor, sort of like a better `top`
      - nethogs           # process network usage information
      - evemu-tools       # X event toolkit
      - lm-sensors        # computer internal sensor support
      - tmux              # terminal multiplexer
      - cryptsetup        # tools for working with encrypted volumes
      - xclip             # clipboard management from the command line
      - p7zip-full        # support extracting a wider variety of archives than supported by default
      - wget              # download files from the internet
      - gnupg2            # secure communications toolkit
      - thefuck           # terminal autocorrect
      - ansible           # configuration and deployment system
      - docker.io         # container runtime
      - docker-compose    # container management framework
      - jekyll            # static blog-aware website generator
      - ruby-jekyll-watch # auto-reload for static blog aware site generator
      - pcregrep          # grep with PCRE instead of POSIX regular expressions
      - powertop          # Intel power management utility
      - whois             # WHOIS directory client
      - net-tools         # various networking-related tools
      - rng-tools         # TRNG interface
      - traceroute        # network path tracer
      - checkinstall      # convert software installations into OS packages
      - jq                # JSON processing with filters
      - miller            # CSV/TSV/JSON processing with filters
      - exif              # inspect EXIF data inside photos
      - restic            # incremental encrypted backups
      - love              # 2D game engine
      - rclone            # file synchronization utility for various cloud providers
      - rsync             # file synchronization utility for synchronization between computers
      - youtube-dl        # video site downloader
      - libheif-examples  # programs for working with the HEIF image format (now the default output of iPhone cameras)
      - sox               # utilities for working with audio
      - lame              # MP3 encoder and utilities
      - jupyter-notebook  # Jupyter interactive notebook with Python 3 support
      - default-jdk       # default Java compiler
      - moreutils         # useful extra command-line tools
    become: yes

  - name: install Yubikey 4 stuff
    apt:
      name:
      - yubikey-personalization-gui
      - yubioath-desktop
      - pcscd
      - scdaemon
      - pcsc-tools
    become: yes

  - name: install various C/C++ development tools and libraries
    apt:
      name:
      - build-essential # many useful build tools
      - cmake           # compiler-independent build system
      - automake        # makefile generator
      - libtool         # library development helper
      - swig            # language bindings generator
      - ffmpeg          # media encoders/decoders
      - libjpeg-dev     # JPEG libraries
      - libpng-dev      # PNG libraries
      - libffi-dev      # foreign function interface libraries
      - rr              # recording debugger
    become: yes

  - name: install Go development tools
    apt:
      name:
      - golang
    become: yes

  - name: install database tools
    apt:
      name:
      - sqlite3
      - sqlitebrowser
      - postgresql-all
      - postgresql-client
      - postgresql-doc
      - pgadmin3
      - redis
    become: yes

  - name: install javascript development tools and common libraries
    apt:
      name:
      - nodejs
      - npm
    become: yes

  - name: install Lua stuff
    apt:
      name:
      - lua5.3
      - luarocks
    become: yes

  - name: install VSCode
    block:
      - apt_key: id=BC528686B50D79E339D3721CEB3E94ADBE1229CF url=http://packages.microsoft.com/keys/microsoft.asc
      - apt_repository: repo='deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main'
      - apt: name=code update_cache=yes
    become: yes
  - name: configure VSCode
    block:
      - file: path=~/.config/Code/User state=directory
      - copy: src=files/settings.json dest=~/.config/Code/User/settings.json
      - copy: src=files/keybindings.json dest=~/.config/Code/User/keybindings.json

  - name: install Signal for Desktop
    block:
      - apt_key: id=DBA36B5181D0C816F630E889D980A17457F6FB06 keyserver=keyserver.ubuntu.com
      - apt_key:
          url: https://updates.signal.org/desktop/apt/keys.asc
          id: DBA36B5181D0C816F630E889D980A17457F6FB06
      - apt_repository: repo='deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main' # Signal team only maintains xenial packages, however this is designed to work for all Debian-derivatives
      - apt: name=signal-desktop update_cache=yes
    become: yes

  - name: install Python development tools and common libraries that are available as packages
    apt:
      name:
      - python3-all-dev
      - python3-pip
      - python3-wheel
      - python3-rope
      - python3-pyside
      - python3-numpy
      - python3-sympy
      - python3-sklearn
      - python3-matplotlib
      - python3-cryptography
      - python3-serial
      - python3-requests
      - python3-requests-cache
      - python3-requests-futures
      - python3-colorama
      - python3-sortedcontainers
      - python3-urwid
      - python3-xdo
      - python3-flask
      - python3-flask-sqlalchemy
      - python3-fuzzywuzzy
      - python3-psycopg2
      - python3-pygit2
      - python3-pudb
      - python3-wand
      - flake8
      - mypy
      - python3-mutagen
      - python3-arrow
      - python3-scipy
      - python3-plotly
      - python3-seaborn
      - python3-bs4
      - python3-pexpect
      - python3-pyperclip
      - python3-venv
      - python3-q
      - python3-nltk
      - python3-bluez
      - virtualenvwrapper
      - twine
    become: yes

  - name: install ZSH and make it the default shell
    block:
      - apt:
          name:
          - zsh
          - zsh-syntax-highlighting
          - zsh-doc
          - zgen
          - socat
          - python3-psutil
          - python3-pygit2
          - powerline
      - user: name={{ user_name }} shell=/usr/bin/zsh
    become: yes
  - name: configure ZSH
    copy: src=files/.zshrc dest=~/.zshrc

  - name: configure Vim
    copy: src=files/.vimrc dest=~/.vimrc

  - name: install various system administration scripts
    block:
      - file: path=~/.local/bin state=directory
      - copy: src=files/scripts/ dest=~/.local/bin/ mode=u+x

  # TODO: install these
  #- name: install basic audio/music packages
  #  apt:
  #    name:
  #    - qjackctl     # JACK audio control/configuration panel
  #    - vmpk         # virtual MIDI keyboard
  #    - lmms         # simple sequencer/DAW
  #    - jalv         # plugin host for LV2 audio plugins
  #    - calf-plugins # collection of useful LV2 audio plugins
  #    - so-synth-lv2 # LV2 synthesizer plugins
  #    - caps         # C* audio plugin suite
  #    - zynaddsubfx  # subtractive synthesizer
  #    - ams          # modular synthesizer
  #    - qmidiroute   # MIDI re-routing utility
  #    - qmidiarp     # MIDI arpeggiator
  #    - hydrogen     # drum machine/sequencer
  #    - ardour       # fully-featured DAW
  #  become: yes

  # UPGRADEABLE: LAST UPDATE 2019-06-13
  - name: install Arduino IDE
    block:
      - get_url:
          checksum: sha512:1cea971484bd0e85ba9e7b8a72a0cd0b8338b23493332eb3c7c03a7c86ce638e7a46fc063f79a542bc4359332f5785dbc6ef433dcccc4b291632d3b17a1968b4
          dest: "{{ tmp_working_dir }}/arduino-linux.tar.xz"
          url: https://downloads.arduino.cc/arduino-1.8.9-linux64.tar.xz
        register: arduino_ide
      - unarchive: dest=/opt/ src={{ tmp_working_dir }}/arduino-linux.tar.xz
        when: arduino_ide.changed
        become: yes
      - shell: /opt/arduino-1.8.9/install.sh # install icons and desktop integration
        when: arduino_ide.changed
      - shell: /opt/arduino-1.8.9/arduino-linux-setup.sh {{ user_name }} # add Linux user groups, udev rules, and other necessary system configs # TODO: doesn't work as root, must ask for password
        when: arduino_ide.changed

  - name: install Nautilus plus extensions, settings, and keyboard shortcuts
    block:
      - apt:
          name:
          - nautilus
          - nautilus-wipe
          - nautilus-admin
        become: yes
      - copy: src=files/Terminal dest=~/.local/share/nautilus/scripts/Terminal mode=u+x # set up Nautilus script that opens a terminal window at the currently open directory
      - copy: content="F12 Terminal" dest=~/.config/nautilus/scripts-accels # set the script to run when we press F12
      - dconf: key={{ item.key }} value={{ item.value }} state=present
        with_items:
          - { key: "/org/gnome/nautilus/list-view/default-visible-columns", value: "['name', 'size', 'type', 'owner', 'group', 'permissions', 'mime_type', 'date_modified_with_time']" }
          - { key: "/org/gnome/nautilus/preferences/search-view", value: "'list-view'" }
          - { key: "/org/gnome/nautilus/preferences/default-folder-viewer", value: "'list-view'" }
          - { key: "/org/gnome/nautilus/preferences/fts-default", value: "false" }
          - { key: "/org/gnome/nautilus/preferences/show-create-link", value: "true" }
          - { key: "/org/gnome/nautilus/preferences/show-delete-permanently", value: "true" }
      - copy: content="" dest=~/Templates/empty-text-file.txt # create empty test file without having to switch to a terminal

  - name: install and configure Meld
    block:
      - apt: name=meld
        become: yes
      - dconf: key={{ item.key }} value={{ item.value }} state=present
        with_items:
          - { key: "/org/gnome/meld/wrap-mode", value: "'word'" }
          - { key: "/org/gnome/meld/highlight-current-line", value: "true" }
          - { key: "/org/gnome/meld/show-line-numbers", value: "true" }
          - { key: "/org/gnome/meld/draw-spaces", value: "['space', 'tab', 'newline', 'nbsp', 'leading', 'text', 'trailing']" }
          - { key: "/org/gnome/meld/highlight-syntax", value: "true" }
          - { key: "/org/gnome/meld/style-scheme", value: "'solarized-light'" }

  # TODO: look at other extensions and update the extensions installed here to match actually installed extensions
  - name: install some useful Gnome shell extensions
    apt:
      name:
      - chrome-gnome-shell
      - gnome-shell-extensions
      - gnome-shell-extension-system-monitor
    become: yes
  - name: configure Gnome shell extensions
    dconf: key={{ item.key }} value={{ item.value }} state=present
    with_items:
      - { key: "/org/gnome/shell/enabled-extensions", value: "[ 'gTile@vibou', 'cariboublocker@git.keringar.xyz', 'system-monitor@paradoxxx.zero.gmail.com', 'unite@hardpixel.eu', 'disconnect-wifi@kgshank.net', 'dash-to-panel@jderose9.github.com']" }
      - { key: "/org/gnome/shell/extensions/system-monitor/show-tooltip", value: "true" }
      - { key: "/org/gnome/shell/extensions/system-monitor/disk-display", value: "true" }
      - { key: "/org/gnome/shell/extensions/system-monitor/net-display", value: "false" }
      - { key: "/org/gnome/shell/extensions/system-monitor/cpu-refresh-time", value: "1000" }
      - { key: "/org/gnome/shell/extensions/system-monitor/memory-refresh-time", value: "1000" }
      - { key: "/org/gnome/shell/extensions/system-monitor/disk-refresh-time", value: "1000" }

  - name: install and use Numix theme for GTK
    block:
      - apt: name=numix-gtk-theme
        become: yes
      - dconf: key="/org/gnome/desktop/interface/gtk-theme" value="'Numix'" state=present

  - name: configure Gnome using DConf
    dconf: key={{ item.key }} value={{ item.value }} state=present
    with_items:
      - { key: "/org/gnome/desktop/interface/clock-show-weekday", value: "true" } # show day of week in top bar clock
      - { key: "/org/gnome/desktop/interface/clock-show-date", value: "true" } # show date in top bar clock
      - { key: "/org/gnome/desktop/interface/clock-show-seconds", value: "true" } # show seconds in top bar clock
      - { key: "/org/gnome/desktop/interface/show-battery-percentage", value: "true" } # show battery percentage in top bar
      - { key: "/org/gnome/desktop/calendar/show-weekdate", value: "true" } # show week of year in top bar calendar

      - { key: "/com/ubuntu/sound/allow-amplified-volume", value: "true" } # allow volume to be set above 100% in top bar
      - { key: "/org/gnome/desktop/interface/enable-animations", value: "false" } # disable UI animations
      - { key: "/org/gnome/desktop/input-sources/xkb-options", value: "['caps:escape']" } # swap CapsLock and Escape keys
      - { key: "/org/gnome/desktop/notifications/show-in-lock-screen", value: "false" } # don't show notifications on lock screen
      - { key: "/org/gnome/desktop/peripherals/mouse/accel-profile", value: "flat" } # use flat acceleration profile for mouse
      - { key: "/org/gnome/desktop/interface/gtk-enable-primary-paste", value: "false" } # disable middle-click paste
      - { key: "/org/gnome/rhythmbox/sources/visible-columns", value: "['post-time', 'artist', 'duration', 'album', 'track-number', 'date', 'first-seen']" }

  - name: configure keyboard shortcuts using DConf
    dconf: key={{ item.key }} value={{ item.value }} state=present
    with_items:
      - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-up",    value: "['<Primary><Super>Up']" }
      - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-down",  value: "['<Primary><Super>Down']" }
      - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-left",  value: "['<Primary><Super>Left']" }
      - { key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-right", value: "['<Primary><Super>Right']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-up",      value: "['<Shift><Super>Up']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-down",    value: "['<Shift><Super>Down']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-left",    value: "['<Shift><Super>Left']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-right",   value: "['<Shift><Super>Right']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-monitor-up",        value: "['<Shift><Super>w']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-monitor-down",      value: "['<Shift><Super>s']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-monitor-left",      value: "['<Shift><Super>a']" }
      - { key: "/org/gnome/desktop/wm/keybindings/move-to-monitor-right",     value: "['<Shift><Super>d']" }
      - { key: "/org/gnome/desktop/wm/keybindings/toggle-fullscreen",         value: "['<Super>F11']" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name",    value: "'Launch Qalculate'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command", value: "'qalculate'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding", value: "'<Super>c'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/name",    value: "'Open Dropbox Folder'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/command", value: "'nautilus Dropbox'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/binding", value: "'<Super>f'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/name",    value: "'Open VSCode'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/command", value: "'code'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/binding", value: "'<Super>e'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/name",    value: "'Show CopyQ'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/command", value: "'copyq show'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/binding", value: "'<Super>z'" }
      - { key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings", value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/']" }

  - name: configure Git
    git_config: name={{ item.name }} scope=global value={{ item.value }}
    with_items:
      - { name: "rerere.enabled", value: "true" }               # enable reuse of recorded hunk conflict resolutions
      - { name: "push.default", value: "matching" }             # use matching behaviour in pushes
      - { name: "user.name", value: "{{ real_name }}" }         # user's real name
      - { name: "user.email", value: "{{ email }}" }            # user's real name
      - { name: "diff.tool", value: "meld" }                    # diff viewer utility
      - { name: "core.pager", value: "less --chop-long-lines" } # disable word wrap in git diff

  - name: disable unnecessary network-facing services such as Avahi/Bonjour and CUPS
    block:
      - service: name=cups enabled=no state=stopped
        become: yes
      - apt: name=kdeconnect state=absent
        become: yes

  - name: disable occasionally-used services that take up a lot of resources
    block:
      - service: name=snapd enabled=no state=stopped
        become: yes
      - service: name=postgresql enabled=no state=stopped
        become: yes
      - service: name=redis-server enabled=no state=stopped
        become: yes

  - name: disable Gnome Tracker since it uses up a lot of resources
    block:
      - dconf: key="/org/freedesktop/tracker/miner/files/crawling-interval" value="-2" state=present
      - dconf: key="/org/freedesktop/tracker/miner/files/enable-monitors" value="false" state=present
      - dconf: key="/org/gnome/desktop/privacy/remember-recent-files" value="false" state=present
      - shell: tracker reset --hard
      - shell: systemctl --user mask tracker-store.service tracker-miner-fs.service tracker-extract.service tracker-miner-apps.service tracker-writeback.service # from https://www.linuxuprising.com/2019/07/how-to-completely-disable-tracker.html

  - name: set up user account with audio (for realtime JACK audio), video (for GPU access), and vboxusers (for USB access in Virtualbox)
    user: name={{ user_name }} groups=audio,video,vboxusers append=yes
    become: yes